<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-01-02T16:47:32+01:00</updated><id>http://localhost:4000/</id><title type="html">Veil</title><subtitle>The first Zerocoin-based cryptocurrency with always-on privacy.</subtitle><entry xml:lang="en"><title type="html">Understanding Zerocoin</title><link href="http://localhost:4000/blog/understanding-zerocoin/" rel="alternate" type="text/html" title="Understanding Zerocoin" /><published>2018-12-01T00:00:00+01:00</published><updated>2018-12-01T00:00:00+01:00</updated><id>http://localhost:4000/blog/zerocoin</id><content type="html" xml:base="http://localhost:4000/blog/understanding-zerocoin/">&lt;h2 id=&quot;history-of-zerocoin&quot;&gt;History of Zerocoin&lt;/h2&gt;

&lt;p&gt;The Zerocoin protocol was conceived in 2013 by Johns Hopkins researcher Matthew D. Green&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, as an &lt;strong&gt;extension&lt;/strong&gt; of Bitcoin, providing for &lt;strong&gt;optional&lt;/strong&gt; anonymity in the Bitcoin network. We say “optional” anonymity since the Zerocoin model involves converting &lt;strong&gt;public&lt;/strong&gt; bitcoins to &lt;strong&gt;anonymous&lt;/strong&gt; zerocoins, and back.&lt;/p&gt;

&lt;p&gt;So the first concept to understand is that in Zerocoin networks, there are &lt;em&gt;two&lt;/em&gt; types of tokens (coins)—&lt;em&gt;public&lt;/em&gt; tokens, known as &lt;strong&gt;basecoins&lt;/strong&gt;, and &lt;em&gt;anonymous&lt;/em&gt; tokens, known as &lt;strong&gt;zerocoins&lt;/strong&gt;. (Misunderstanding of this concept is a common source of confusion in networks such as PIVX, where one finds “PIV” and “zPIV” coins.)&lt;/p&gt;

&lt;p&gt;In Veil, the on-chain coins are called &lt;strong&gt;Basecoin Veil&lt;/strong&gt;, and the anonymous coins are called &lt;strong&gt;Zerocoin Veil&lt;/strong&gt;. Since the Veil wallet automatically converts basecoins to zerocoins, however, the general use of “Veil” is meant to imply the anonymous coin.&lt;/p&gt;

&lt;p&gt;(You’ll notice that for Basecoin Veil, we used the term “on-chain”, rather than “public”, since in the Veil network, Basecoin transactions are &lt;em&gt;also&lt;/em&gt; anonymized using “RingCT” technology, but explanation of &lt;em&gt;that&lt;/em&gt; will be saved for another post.)&lt;/p&gt;

&lt;h2 id=&quot;the-logic-behind-zerocoin&quot;&gt;The logic behind Zerocoin&lt;/h2&gt;

&lt;p&gt;Imagine we’re considering how to design an extension to the bitcoin network that would allow us to convert bitcoins to zerocoins, and then be able to spend them later &lt;em&gt;anonymously&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In order that the bitcoin monetary supply remains auditable, the &lt;em&gt;creation&lt;/em&gt; of zerocoins can’t be anonymous, i.e. when we bring a zerocoin into existence, through a process known as &lt;strong&gt;minting&lt;/strong&gt;, we necessarily have to take a bitcoin out of circulation, in a process known as &lt;strong&gt;burning&lt;/strong&gt;, and since bitcoin is a &lt;em&gt;public&lt;/em&gt; token, its removal (burning) also has to be public.&lt;/p&gt;

&lt;p&gt;Therefore, if I minted 1.73458 zerocoins—something we’ll later see isn’t technically possible, but for the moment we’ll ignore that—by burning 1.73458 bitcoins, and if the world can know, since bitcoin is public, that I owned those 1.73458 bitcoins, then the world will also know that I now control 1.73458 zerocoins.&lt;/p&gt;

&lt;p&gt;So the challenge in a network like this is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If my creation of zerocoins is public, how can I later &lt;em&gt;spend&lt;/em&gt; those zerocoins anonymously?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;fixed-denominations&quot;&gt;Fixed denominations&lt;/h2&gt;

&lt;p&gt;The above example already presents the very first challenge. If I created such a precise amount of zerocoins in the past, like 1.73458, then when that precise amount of zerocoins gets spent in the future, it wouldn’t be very hard to assume that the spend came from me. Why? Because there simply won’t be very many other zerocoin address “outputs” out there holding precisely 1.73458 coins.&lt;/p&gt;

&lt;p&gt;Considering this problem, Green may have thought, “What if zerocoins only existed in &lt;strong&gt;fixed denominations&lt;/strong&gt;, like cash bills or casino chips? If there only existed denominations of, say, 1 zerocoin, 10 zerocoin, 100 zerocoin, and 1,000 zerocoin, then maybe I could design a system in which, if you spend a 10 zerocoin, the network won’t know &lt;em&gt;which&lt;/em&gt; of all the 10 zerocoins you spent.”&lt;/p&gt;

&lt;p&gt;This idea of fixed denominations was ultimately implemented in the Zerocoin protocol, and made to work through the concepts of &lt;strong&gt;accumulators&lt;/strong&gt; and &lt;strong&gt;zero-knowledge proofs&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;accumulators&quot;&gt;Accumulators&lt;/h2&gt;

&lt;p&gt;In Zerocoin networks, an “accumulator” exists for each denomination supported by the network. So if the Bitcoin network supported denominations of, say, 10, 100 and 1,000 zerocoin, it would have &lt;em&gt;three&lt;/em&gt; accumulators.&lt;/p&gt;

&lt;p&gt;Conceptually, most people think of accumulators as “buckets”, holding all the coins of a particular denomination. But in reality, as we’ll see later, an accumulator is actually a single &lt;strong&gt;number&lt;/strong&gt;, that cryptographically embeds knowledge of the existence of each outstanding zerocoin in that particular denomination.&lt;/p&gt;

&lt;p&gt;As you might imagine, the particular choice of denominations in a Zerocoin network has to be carefully considered, and the trade-off is between convenience and anonymity.&lt;/p&gt;

&lt;p&gt;To understand this, consider that when I spend a 10 zerocoin token, its traceability back to me—i.e. back to my minting of a 10 zerocoin token—is a function of &lt;em&gt;the total number of 10 zerocoins that exist&lt;/em&gt;. If there’s only five 10 zerocoins in existence, and I spend one of them, it might not take much sleuthing to figure out it was me. On the other hand, if there are five million 10 zerocoins in circulation, the problem becomes much more difficult, if not impossible.&lt;/p&gt;

&lt;p&gt;For this reason, a network that only has six denominations would likely provide greater anonymity than one that has a hundred different denominations (all other things being equal). For the Veil network, there will exist four denominations, and hence, four “accumulators”: 10, 100, 1000 and 10000 Zerocoin Veil.&lt;/p&gt;

&lt;h2 id=&quot;zero-knowledge-proofs&quot;&gt;Zero-knowledge proofs&lt;/h2&gt;

&lt;p&gt;Zero-knowledge proofs&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, to most mortals, are akin to black magic. We won’t get close to the math behind them, but here’s what a zero-knowledge proof is in practice:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A ZK proof is a method by which one party can prove to another that a given statement is true, without conveying any additional information apart from the fact that the statement is indeed true.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Mind blowing, I know. Don’t get scared!&lt;/p&gt;

&lt;h2 id=&quot;how-the-zerocoin-protocol-works&quot;&gt;How the Zerocoin protocol works&lt;/h2&gt;

&lt;p&gt;With all that as background, we can now proceed to explain how the Zerocoin protocol works in practice.&lt;/p&gt;

&lt;p&gt;Let’s start by walking through the process of what happens when you mint zerocoin by burning basecoin—something that happens &lt;em&gt;automatically&lt;/em&gt; in the Veil wallet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Burning &amp;amp; Minting&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Say you received an incoming payment of 10.73458 Basecoin Veil. Looking at that number, your wallet would know that it can convert 10 of those to a single 10 Zerocoin Veil token. (The remaining 0.73458 Basecoin Veil would stay as Basecoin Veil in your wallet.)&lt;/p&gt;

&lt;p&gt;To create your new 10 Zerocoin Veil token, your wallet creates a &lt;strong&gt;unique serial number&lt;/strong&gt;, that we’ll call “S”, and a random number, that we’ll call “V”. Your wallet then performs what’s known as a “one-way” cryptographic calculation known as the &lt;strong&gt;Pedersen Commitment&lt;/strong&gt;, that takes V and S, and computes a number called, “C”:&lt;/p&gt;

&lt;p&gt;C = comm(S,V)&lt;/p&gt;

&lt;p&gt;This formula simply means that “comm” is a mathematical function—the Pedersen Commitment—that takes S and V as inputs, and produces the number C as an output. It’s “one-way” in the sense that S and V can’t be back-calculated from C.&lt;/p&gt;

&lt;p&gt;Having computed C, our wallet now “burns” 10 Basecoin Veil—taking them out of circulation—in a blockchain-recorded transaction in which the value “C” is publicly recorded.&lt;/p&gt;

&lt;p&gt;The “10 Zerocoin Veil” network accumulator number is then updated cryptographically to embed knowledge of the newly introduced “C” value.&lt;/p&gt;

&lt;p&gt;By burning 10 Basecoin Veil in this way, we have also “minted” a brand new 10 Zerocoin Veil token, that is associated with the recorded number “C”, which is linked to me, and to the unique serial number, S, which at this point is only known to my wallet!&lt;/p&gt;

&lt;p&gt;Before moving on, let’s review where we are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We have burned 10 Basecoin Veil in a blockchain transaction that minted the creation of a 10 Zerocoin Veil token, recorded with the number, C.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Since the burned Basecoin Veil is public (or for Veil, more precisely “on-chain”), the number C is publicly visible.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Only our wallet knows the random number, V, used along with S, in the calculation of C.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Only our wallet knows the serial number, S, which is the unique identifier of our particular 10 Zerocoin Veil token, among all the tokens.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Spending anonymously&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now comes the interesting part: How do we later spend those 10 Zerocoin Veil anonymously? To do that requires that the spend can’t be linked back to the mint. Let’s look at how that’s done.&lt;/p&gt;

&lt;p&gt;When I’m ready to spend my 10 Zerocoin Veil, my wallet calculates &lt;strong&gt;two zero-knowledge proofs&lt;/strong&gt;, the first of which can be used independently, and the second which can only be used in tandem with the first.&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;first&lt;/strong&gt; ZK proof, I mathematically prove that the coin I want to spend (the 10 Zerocoin Veil) exists in the 10 Zerocoin Veil accumulator, without revealing which coin that is. Mathematically, I have to prove that the value “C” I wrote to the blockchain during my mint exists in the accumulator, without revealing the particular value of “C” I’m proving—since that would point directly back to me!&lt;/p&gt;

&lt;p&gt;To do this, I compute the Pedersen Commitment function using C and another random value, R, that I choose and is only known to me, to produce the output Y.&lt;/p&gt;

&lt;p&gt;Y = comm(C,R)&lt;/p&gt;

&lt;p&gt;(The inclusion of a random number R is critical, because if I just computed comm(C) to produce Y, then by computing comm(C) on &lt;em&gt;all the recorded C’s in the blockchain&lt;/em&gt;, you could easily figure out which C I’m proving!)&lt;/p&gt;

&lt;p&gt;When I provide the value Y to the network, the network can validate my proof using Y and the current accumulator number to confirm that, yes, I do control a particular coin in the accumulator, but without knowing &lt;em&gt;which&lt;/em&gt; one, i.e. the network doesn’t know which “C” I used in the computation of Y.&lt;/p&gt;

&lt;p&gt;Then, I &lt;em&gt;publicly reveal&lt;/em&gt; the unique serial number, S, corresponding to my particular 10 Zerocoin Veil, and provide a &lt;strong&gt;second&lt;/strong&gt; ZK proof demonstrating that I know &lt;em&gt;some random value&lt;/em&gt; V, that, in turn, proves I control the still-unrevealed “C” used in the &lt;em&gt;first&lt;/em&gt; proof.&lt;/p&gt;

&lt;p&gt;That’s a mouthful, but is why the second proof is only meaningful in tandem with the first.&lt;/p&gt;

&lt;p&gt;So in summary:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Proof 1 proves that the coin I’m going to demonstrate control of in Proof 2, corresponding to the minting recorded with C on the blockchain, exists in the accumulator but without revealing which C that is.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Proof 2 allows me to reveal the unique serial number, S, corresponding to my particular coin, without revealing which burn and mint transaction, C, it corresponds to.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or said another way:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Zero-knowledge proofs have allowed me to prove that I control a specific token among all the 10 Zerocoin Veil tokens, without any connection to the specific blockchain transaction that created that coin.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At this point, my spend transaction will be recorded on the blockchain:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The transaction will publicly record my unique serial value, S, so that that coin can’t be double spent in the future.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;10 fresh Basecoin Veil will be put into circulation and delivered to the destination address of my transaction, and my 10 Zerocoin Veil can not be re-spent due to the public recording of its unique serial number, S.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And so, through the use of zero-knowledge proofs, I have spent my 10 Zerocoin Veil &lt;em&gt;anonymously&lt;/em&gt;!&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this article, we’ve described the Zerocoin protocol—one of the beautiful technologies underlying the strong anonymity you’ll find in the Veil currency&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;See &lt;a href=&quot;https://en.wikipedia.org/wiki/Zerocoin_protocol&quot;&gt;https://en.wikipedia.org/wiki/Zerocoin_protocol&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;See &lt;a href=&quot;https://www.hindawi.com/journals/tswj/2014/560484/&quot;&gt;https://www.hindawi.com/journals/tswj/2014/560484/&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;Thanks to Veil developer Random.zebra for helping me wrap my head around the concepts like zero-knowledge proofs described in this document, and to Veil team members for editing feedback. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>gabrielnergaard</name></author><summary type="html">In this article, we’re going to take a practical look into how the fascinating Zerocoin protocol works to provide anonymity.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/icons/logo.png" /></entry><entry xml:lang="en"><title type="html">Welcome to Veil</title><link href="http://localhost:4000/blog/welcome-to-veil/" rel="alternate" type="text/html" title="Welcome to Veil" /><published>2018-11-11T00:00:00+01:00</published><updated>2018-11-11T00:00:00+01:00</updated><id>http://localhost:4000/blog/welcome-to-veil</id><content type="html" xml:base="http://localhost:4000/blog/welcome-to-veil/">&lt;h2 id=&quot;our-philosophy&quot;&gt;Our Philosophy&lt;/h2&gt;

&lt;p&gt;In today’s digital age, the need for digital cash is a necessity. Transacting privately and anonymously is an inherent human right. For centuries, humans have been transacting with precious metals or fiat-backed currencies which are both physical and fungible.&lt;/p&gt;

&lt;p&gt;Achieving the same level of privacy that cash offers, digitally, is nearly impossible, but with the internet acting as a new medium for transacting, a competitive new industry focused solely on emulating cash in the digital space is emerging.&lt;/p&gt;

&lt;p&gt;In an effort to stay ahead of the curve, the Veil project is establishing Veil Labs, which is a research and development entity focused on improving upon and innovating new privacy-oriented technologies for cryptocurrencies. The first step was implementing Bulletproofs into the Zerocoin protocol, for increased scalability.&lt;/p&gt;

&lt;p&gt;Privacy is needed for many reasons, particularly in blockchain-based systems where data is transparent and public to anyone who downloads the blockchain.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;If you operate a business that accepts cryptocurrency as payment, then all client payments are sent to your wallet. This is analogous to having your bank account activity be public record - showing all of your clients and partners your bank account and all of the transactional history along with it. Many businesses charge clients and partners different rates, for the same service. It would be beneficial for the business to keep this information as private as possible.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;As a private citizen, companies have access to your spending habits - which includes the amounts you spend and items you purchase. If you can disconnect your spending habits from your personal identity, then companies will have less ammunition for intrusive advertisements and manipulation.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If a company which accepts payment in cryptocurrency is compromised, then the bad actors will be able to easily view all of its customer’s spending habits. Ensuring that privacy is maintained throughout all steps of a transaction protects all participants involved.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bitcoin was the first major cryptocurrency released to the masses in 2009 with a goal of serving as digital cash, but since its release, the community has learned that it is pseudonymous and not private. With strategically placed nodes around the globe, there are surveillance oriented nodes which can track all of Bitcoin’s payments and gather enough information to connect transactions with an IP address, and potentially, a user’s personal identity. As a result, we aim to improve upon Bitcoin’s original mission by keeping true to its core consensus rules while improving privacy to protect transactional data exposed to the network.&lt;/p&gt;

&lt;h2 id=&quot;our-technology&quot;&gt;Our Technology&lt;/h2&gt;

&lt;p&gt;Our technology stack includes a combination of the Zerocoin protocol, RingCT, Dandelion, and Bulletproofs. Let’s briefly dive in to understand how Veil incorporates these.&lt;/p&gt;

&lt;h3 id=&quot;zerocoin-protocol-and-ring-ct&quot;&gt;Zerocoin Protocol and Ring CT&lt;/h3&gt;

&lt;p&gt;Veil is an always-on private cryptocurrency. With most cryptocurrencies, privacy is merely an option in a user’s wallet, meaning a user can choose to spend in a pseudonymous manner, or a more private fashion.&lt;/p&gt;

&lt;p&gt;Technically speaking, the Veil project, much like other Zerocoin focused projects, has two types of coins: Basecoins and Zerocoins. With most other projects, users must manually mint their Basecoins into Zerocoins, if they so choose. With Veil, Basecoins are automatically minted into Zerocoins above 10 Basecoin. In other words, every time a user has at least 10 Basecoins, they are automatically minted into Zerocoins. The reason that two types of coins exist and every coin is not minted into a Zerocoin, despite the fact they are the same currency (Veil), is because there is a computational cost to minting and spending Zerocoins. Please note that the average user does not need to worry about this, as they will ultimately see one balance.&lt;/p&gt;

&lt;p&gt;In Veil, Basecoin transactions are anonymized using RingCT and stealth addresses. RingCT is a method to anonymize the sender in a transaction by merging the sender’s digital signature with random other signatures grabbed from the blockchain’s history, creating a final, unique signature. Then using a range proof the amount transacted is hidden. Ultimately, the network does not know the sender or amount in a transaction but using a cryptographic key image, miners can confirm that the transaction is valid and no double-spend has occurred.&lt;/p&gt;

&lt;p&gt;Now, every 10 Basecoins auto-mints into 1 Zerocoin denomination, which to the user is simply 10 Veil. This is the relationship Veil has created between RingCT and Zerocoin logic. RingCT anonymizes the Basecoins, while Zerocoin ensures the highest level of privacy for the sender.&lt;/p&gt;

&lt;h3 id=&quot;what-makes-zerocoin-private&quot;&gt;What makes Zerocoin private?&lt;/h3&gt;

&lt;p&gt;As you can tell, we are major advocates of the Zerocoin protocol. We will briefly explain how this process works.&lt;/p&gt;

&lt;p&gt;There is the process of minting Basecoins into Zerocoins and then the process of spending Zerocoins.&lt;/p&gt;

&lt;p&gt;Zerocoin Minting. The minting process begins by burning Basecoins and generating a serial number which represents the value of those Basecoins - let’s say 10 Basecoins are minted into 1 Zerocoin denomination of Veil. In this case, 10 Basecoins are burned and there is a serial number created representing those 10 Basecoins as 1 Zerocoin denomination. The user then takes this serial number and cryptographically commits it to the blockchain.&lt;/p&gt;

&lt;p&gt;A common way to visualize this cryptographic commitment of the serial number is by pretending the serial number is a message placed in a locked box. You put the lockbox up publicly for the network to see (this is committing it to the blockchain). Your lockbox looks like everyone else’s and no one knows whose box belongs to who. Only each individual owner can open their own lockbox if they have the proper private key. The network merely knows that there are a bunch of lockboxes representing burned coins.&lt;/p&gt;

&lt;p&gt;Zerocoin Spending. Next, you want to send someone Veil, hence, you want to spend Zerocoins. To gain access to your lockbox, you must prove that you have the key to open it. Cryptographically, in terms of the blockchain, this proving process is done through zero-knowledge proofs where you can prove to the network that you opened a box. You do not show the contents of the box, or even which box was yours. In essence, the Zerocoin mint and spending action allows the network to confirm that the person who spent the Zerocoins must be the same person who minted them, and the serial number is marked as used.&lt;/p&gt;

&lt;p&gt;To onlookers, this looks like a brand new coin, with no history or source address, is being sent, thus providing absolute unlinkability between the sender and the transaction. In layman’s terms, it looks like a coin is created and sent out of thin air.&lt;/p&gt;

&lt;h3 id=&quot;dandelion&quot;&gt;Dandelion&lt;/h3&gt;

&lt;p&gt;Inspired by BIP 156, Veil has implemented Dandelion into its wallet. RingCT and Zerocoin are excellent methods for ensuring user privacy after a transaction is broadcasted, but not from the onset of a broadcast. Being meticulous in our approach, we chose to include Dandelion which makes the original IP address of a transaction difficult to determine. Put simply, when sending a transaction using Dandelion, the initial broadcast is more private. A specific node, chosen at random, is first given the transaction data from the sending node. The transaction is temporarily not available for query by other nodes in the network. This transaction is kept separate from the others and is sent to a few other nodes privately. Eventually, the transaction is publicly broadcasted to the network similar to a typical transaction would, but in this case, the transaction is broadcasted from a node, or multiple nodes, who are not the original sender.&lt;/p&gt;

&lt;h3 id=&quot;a-veil-transaction-in-action&quot;&gt;A Veil Transaction in Action&lt;/h3&gt;

&lt;p&gt;Please look closely at the diagram below, displaying how Veil’s transactions with Basecoin Veil and Zerocoin Veil work together. Note: this example uses whole numbers and neglects to include minting fees for the sake of simplicity.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/uploads/blog/2018-11-19-change.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;join-us-on-this-journey&quot;&gt;Join us on this journey.&lt;/h2&gt;

&lt;p&gt;This was a brief overview of the main technologies used in the Veil project. Moving forward we will be producing content which explains our thought process and technology in a more detailed fashion. Additionally, if you want to keep up with us be sure to subscribe to our email newsletter for all of our latest updates. Welcome aboard!&lt;/p&gt;</content><author><name>cryptymike</name></author><summary type="html">Veil is a privacy-focused blockchain project with a simple mission - to offer the most private and user-friendly digital currency. With an experienced team of over 25 members, including top cryptographers and developers, we are implementing and improving upon thoroughly vetted privacy protocols, pushing the technical boundaries for privacy and anonymity.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/icons/logo.png" /></entry></feed>